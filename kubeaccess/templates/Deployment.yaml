apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubeaccess # Must match "--ds-name"
  namespace: kube-system # Must match "--ds-namespace"
spec:
  selector:
    matchLabels:
      name: kubeaccess
      {{- include "kubeaccess.labels" . | nindent 6}}
  revisionHistoryLimit: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: kubeaccess
        {{- include "kubeaccess.labels" . | nindent 8}}
      annotations:
        {{- include "kubeaccess.podAnnotations" . | nindent 8}}
    spec:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      hostPID: true # Facilitate entering the host mount namespace via init
      restartPolicy: Always
      volumes:
        - name: kubelet-conf
          hostPath:
            path: /etc/kubernetes/kubelet.conf
            type: File
        - name: ca-crt
          hostPath:
            path: /etc/kubernetes/pki/ca.crt
            type: File
        - name: ca-key
          hostPath:
            path: /etc/kubernetes/pki/ca.key
            type: FileOrCreate
        - name: kubelet-config-yaml
          hostPath:
            path: /var/lib/kubelet/config.yaml
            type: File
      containers:
        - name: kubeaccess
          image: {{ .Values.image.repository }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true # Give permission to nsenter /proc/1/ns/mnt
          env:
            # Pass in the name of the node on which this pod is scheduled
            # for use with drain/uncordon operations and lock acquisition
            - name: KUBEACCESS_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: IS_CLUSTER
              value: "true"
          volumeMounts:
            - mountPath: /etc/kubernetes/kubelet.conf
              name: kubelet-conf
            - mountPath: /etc/kubernetes/pki/ca.crt
              name: ca-crt
              readOnly: true
            - mountPath: /etc/kubernetes/pki/ca.key
              name: ca-key
              readOnly: true
            - mountPath: /var/lib/kubelet/config.yaml
              name: kubelet-config-yaml
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""